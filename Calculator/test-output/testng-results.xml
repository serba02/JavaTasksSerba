<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="25" total="62" passed="37">
  <reporter-output>
    <line>
      <![CDATA[</br>Begin executing method: TestBase.beforeTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestBase.beforeTest Elapsed time: 0]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSinPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSinPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSinPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSinPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSinPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSinPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSumPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSqrtNegTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoublePowPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoublePowPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleDivPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -1]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -1]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -2]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -2]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: 0]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: 0]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -1]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: 0]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCosPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanNegTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -2]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleMultPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleMultPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSqrtNegTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleMultPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSubPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleMultPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSqrtPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleMultPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleSqrtPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleMultPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCosPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -5]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCosPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -9]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCosPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -10]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCosPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -12]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCosPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -13]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCTanNegTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -15]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -16]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -20]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -20]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -22]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleDivPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleDivPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleDivPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleDivPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Begin executing method: TestCalculator.testDoubleCTanPosTest]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -34]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1002]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1001]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1001]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1001].Thread ID: 37]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1001].Thread ID: 36]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1002].Thread ID: 34]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1012]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1012].Thread ID: 32]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1007]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1007].Thread ID: 38]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1008]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1008].Thread ID: 35]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1009]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1009].Thread ID: 33]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1018]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1018].Thread ID: 25]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1015]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1015].Thread ID: 26]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1014]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1014].Thread ID: 27]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1013]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1013]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1013].Thread ID: 29]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1013].Thread ID: 28]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1013]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1013].Thread ID: 30]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1013]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1013].Thread ID: 31]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtPosTest Elapsed time: -1004]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSqrtPosTest] has passed within [1004].Thread ID: 47]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1002]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1002].Thread ID: 41]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1002]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1002].Thread ID: 40]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtPosTest Elapsed time: -1004]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSqrtPosTest] has passed within [1004].Thread ID: 46]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 42]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1011].Thread ID: 79]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 43]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtNegTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 44]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 45]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanNegTest Elapsed time: -1006]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1010]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1010].Thread ID: 69]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoublePowPosTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoublePowPosTest] has passed within [1011].Thread ID: 75]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoublePowPosTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoublePowPosTest] has passed within [1011].Thread ID: 76]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1011].Thread ID: 81]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtNegTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1011]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1011].Thread ID: 80]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 82]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 84]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 83]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 85]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1013]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1013].Thread ID: 39]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1024]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1024].Thread ID: 65]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanNegTest Elapsed time: -1023]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1041]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1041]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1041].Thread ID: 67]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1041].Thread ID: 66]]>
    </line>
    <line>
      <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1041]]>
    </line>
    <line>
      <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1041].Thread ID: 68]]>
    </line>
  </reporter-output>
  <suite name="Group Test" duration-ms="1326" started-at="2016-11-02T11:32:41Z" finished-at="2016-11-02T11:32:42Z">
    <groups>
      <group name="double">
        <method signature="TestCalculator.testDoubleCTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanNegTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleCTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleDivNegTest(long, long)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivNegTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleDivPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoublePowPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoublePowPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSqrtNegTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleSqrtPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSqrtPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanNegTest" class="tests.TestCalculator"/>
        <method signature="TestCalculator.testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" class="tests.TestCalculator"/>
      </group> <!-- double -->
    </groups>
    <test name="TestNG Group" duration-ms="1326" started-at="2016-11-02T11:32:41Z" finished-at="2016-11-02T11:32:42Z">
      <class name="tests.TestCalculator">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="beforeTest" is-config="true" duration-ms="15" started-at="2016-11-02T13:32:41Z" finished-at="2016-11-02T13:32:41Z">
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestBase.beforeTest Elapsed time: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="testDoubleDivNegTest(long, long)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivNegTest" duration-ms="185" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderLong" finished-at="2016-11-02T13:32:41Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
The data provider is trying to pass 3 parameters but the method tests.TestCalculator#testDoubleDivNegTest takes 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
The data provider is trying to pass 3 parameters but the method tests.TestCalculator#testDoubleDivNegTest takes 2
	at org.testng.internal.Invoker.injectParameters(Invoker.java:1337)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1203)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleDivNegTest -->
        <test-method status="PASS" signature="testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" duration-ms="1018" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1411200080598672]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1018]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1018].Thread ID: 25]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSinPosTest -->
        <test-method status="PASS" signature="testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" duration-ms="1015" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.3048106211022167]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1015]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1015].Thread ID: 26]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSinPosTest -->
        <test-method status="PASS" signature="testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" duration-ms="1014" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.5365729180004349]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1014]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1014].Thread ID: 27]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSinPosTest -->
        <test-method status="PASS" signature="testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" duration-ms="1013" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1013]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1013].Thread ID: 30]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSinPosTest -->
        <test-method status="PASS" signature="testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" duration-ms="1013" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[180.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.8011526357338304]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1013]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1013].Thread ID: 29]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSinPosTest -->
        <test-method status="PASS" signature="testDoubleSinPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSinPosTest" duration-ms="1013" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.9880316240928618]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSinPosTest Elapsed time: -1013]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSinPosTest] has passed within [1013].Thread ID: 28]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSinPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1013" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1013]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1013].Thread ID: 31]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1012" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.01]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.02]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1012]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1012].Thread ID: 32]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1002" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1002]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1002].Thread ID: 34]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1009" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1009]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1009].Thread ID: 33]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1001" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23.7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[49.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1001]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1001].Thread ID: 36]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1008" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[101.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[116.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1008]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1008].Thread ID: 35]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1001" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[50.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1001]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1001].Thread ID: 37]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1007" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-40.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-60.8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1007]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1007].Thread ID: 38]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSumPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSumPosTest" duration-ms="1013" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSumPosTest Elapsed time: -1013]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSumPosTest] has passed within [1013].Thread ID: 39]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSumPosTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1012" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[83.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[96.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-13.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 83]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1012" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-68.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-54.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-13.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 85]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1012" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[99.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[27.299999999999997]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 82]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1012" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-93.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-128.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1012]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1012].Thread ID: 84]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="FAIL" signature="testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSqrtNegTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-6.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:87)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.testng.TestException: 
Method TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtNegTest Elapsed time: -1011]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSqrtNegTest -->
        <test-method status="PASS" signature="testDoublePowPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoublePowPosTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoublePowPosTest Elapsed time: -1011]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoublePowPosTest] has passed within [1011].Thread ID: 75]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoublePowPosTest -->
        <test-method status="FAIL" signature="testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSqrtNegTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:87)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.testng.TestException: 
Method TestCalculator.testDoubleSqrtNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtNegTest Elapsed time: -1011]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSqrtNegTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1011]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1011].Thread ID: 80]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="FAIL" signature="testDoubleCTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanPosTest" duration-ms="2" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0686586782881817]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0686586782881817] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0686586782881817] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCTanPosTest(TestCalculator.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCTanPosTest -->
        <test-method status="FAIL" signature="testDoubleCTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanPosTest" duration-ms="1" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[57.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.063135125298919]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2.063135125298919] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2.063135125298919] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCTanPosTest(TestCalculator.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCTanPosTest -->
        <test-method status="FAIL" signature="testDoubleCTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanPosTest" duration-ms="2" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8636911544506167]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.8636911544506167] but found [0.999329299739067]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.8636911544506167] but found [0.999329299739067]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCTanPosTest(TestCalculator.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCTanPosTest -->
        <test-method status="FAIL" signature="testDoubleCTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanPosTest" duration-ms="34" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.6778144508505695]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-3.6778144508505695] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-3.6778144508505695] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCTanPosTest(TestCalculator.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -34]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCTanPosTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1011]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1011].Thread ID: 79]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="PASS" signature="testDoubleSubPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSubPosTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSubPosTest Elapsed time: -1011]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSubPosTest] has passed within [1011].Thread ID: 81]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSubPosTest -->
        <test-method status="FAIL" signature="testDoubleCTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanPosTest" duration-ms="1" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[34.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.6038519064146899]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1.6038519064146899] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1.6038519064146899] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCTanPosTest(TestCalculator.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanPosTest Elapsed time: -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCTanPosTest -->
        <test-method status="PASS" signature="testDoublePowPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoublePowPosTest" duration-ms="1011" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoublePowPosTest Elapsed time: -1011]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoublePowPosTest] has passed within [1011].Thread ID: 76]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoublePowPosTest -->
        <test-method status="PASS" signature="testDoubleDivPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivPosTest" duration-ms="1010" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-43.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-56.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.7678571428571429]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1010]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1010].Thread ID: 69]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleDivPosTest -->
        <test-method status="PASS" signature="testDoubleDivPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivPosTest" duration-ms="1041" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[43.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.46511627906976744]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1041]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1041].Thread ID: 68]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleDivPosTest -->
        <test-method status="PASS" signature="testDoubleDivPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivPosTest" duration-ms="1041" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[999.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.1001001001001001]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1041]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1041].Thread ID: 67]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleDivPosTest -->
        <test-method status="PASS" signature="testDoubleDivPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivPosTest" duration-ms="1041" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1041]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1041].Thread ID: 66]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleDivPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="22" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[180.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.3386902103511544]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.3386902103511544] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.3386902103511544] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -22]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="0" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.1578212823495775]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.1578212823495775] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.1578212823495775] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="20" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.29100619138474915]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.29100619138474915] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.29100619138474915] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -20]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="0" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.380515006246586]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-3.380515006246586] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-3.380515006246586] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="1" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.185039863261519]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-2.185039863261519] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-2.185039863261519] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="PASS" signature="testDoubleDivPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleDivPosTest" duration-ms="1024" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.6666666666666666]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleDivPosTest Elapsed time: -1024]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleDivPosTest] has passed within [1024].Thread ID: 65]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleDivPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="20" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8714479827243188]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.8714479827243188] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.8714479827243188] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -20]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="0" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.3200403893795629]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.3200403893795629] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.3200403893795629] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" duration-ms="13" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCosPosTest(TestCalculator.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -13]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCosPosTest -->
        <test-method status="FAIL" signature="testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" duration-ms="9" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.8438539587324921]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.8438539587324921] but found [-0.5365729180004349]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.8438539587324921] but found [-0.5365729180004349]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCosPosTest(TestCalculator.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -9]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCosPosTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="15" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.0] but found [NaN]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -15]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" duration-ms="5" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.9524129804151563]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.9524129804151563] but found [-0.3048106211022167]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.9524129804151563] but found [-0.3048106211022167]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCosPosTest(TestCalculator.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -5]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCosPosTest -->
        <test-method status="FAIL" signature="testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" duration-ms="12" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[180.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.5984600690578581]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.5984600690578581] but found [-0.8011526357338304]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.5984600690578581] but found [-0.8011526357338304]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCosPosTest(TestCalculator.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -12]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCosPosTest -->
        <test-method status="FAIL" signature="testDoubleCTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCTanNegTest" duration-ms="1023" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleCTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleCTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:87)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.testng.TestException: 
Method TestCalculator.testDoubleCTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCTanNegTest Elapsed time: -1023]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCTanNegTest -->
        <test-method status="FAIL" signature="testDoubleTanPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanPosTest" duration-ms="16" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-6.4053311966462765]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-6.4053311966462765] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-6.4053311966462765] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleTanPosTest(TestCalculator.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanPosTest Elapsed time: -16]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanPosTest -->
        <test-method status="FAIL" signature="testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" duration-ms="10" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.15425144988758405]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0.15425144988758405] but found [-0.9880316240928618]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0.15425144988758405] but found [-0.9880316240928618]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCosPosTest(TestCalculator.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -10]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCosPosTest -->
        <test-method status="FAIL" signature="testDoubleCosPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleCosPosTest" duration-ms="2" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.9899924966004454]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-0.9899924966004454] but found [0.1411200080598672]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-0.9899924966004454] but found [0.1411200080598672]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at tests.TestCalculator.testDoubleCosPosTest(TestCalculator.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleCosPosTest Elapsed time: -2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleCosPosTest -->
        <test-method status="FAIL" signature="testDoubleTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleTanNegTest" duration-ms="1006" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Method TestCalculator.testDoubleTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:87)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.testng.TestException: 
Method TestCalculator.testDoubleTanNegTest(double)[pri:0, instance:tests.TestCalculator@1bc6a36e] should have thrown an exception of class java.lang.IllegalArgumentException
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1512)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:73)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleTanNegTest Elapsed time: -1006]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleTanNegTest -->
        <test-method status="PASS" signature="testDoubleSqrtPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSqrtPosTest" duration-ms="1004" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtPosTest Elapsed time: -1004]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSqrtPosTest] has passed within [1004].Thread ID: 46]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSqrtPosTest -->
        <test-method status="PASS" signature="testDoubleSqrtPosTest(double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleSqrtPosTest" duration-ms="1004" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleSqrtPosTest Elapsed time: -1004]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleSqrtPosTest] has passed within [1004].Thread ID: 47]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleSqrtPosTest -->
        <test-method status="PASS" signature="testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" duration-ms="1003" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[43.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-860.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 44]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleMultPosTest -->
        <test-method status="PASS" signature="testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" duration-ms="1003" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-43.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-56.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2408.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 45]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleMultPosTest -->
        <test-method status="PASS" signature="testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" duration-ms="1003" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[999.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[99900.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 43]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleMultPosTest -->
        <test-method status="PASS" signature="testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" duration-ms="1003" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1003]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1003].Thread ID: 42]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleMultPosTest -->
        <test-method status="PASS" signature="testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" duration-ms="1002" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1002]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1002].Thread ID: 40]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleMultPosTest -->
        <test-method status="PASS" signature="testDoubleMultPosTest(double, double, double)[pri:0, instance:tests.TestCalculator@1bc6a36e]" name="testDoubleMultPosTest" duration-ms="1002" started-at="2016-11-02T13:32:41Z" data-provider="DataProviderDouble" finished-at="2016-11-02T13:32:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[</br>Completed executing method: TestCalculator.testDoubleMultPosTest Elapsed time: -1002]]>
            </line>
            <line>
              <![CDATA[</br>Test [testDoubleMultPosTest] has passed within [1002].Thread ID: 41]]>
            </line>
          </reporter-output>
        </test-method> <!-- testDoubleMultPosTest -->
      </class> <!-- tests.TestCalculator -->
    </test> <!-- TestNG Group -->
  </suite> <!-- Group Test -->
</testng-results>
